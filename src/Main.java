/**
 * Clase Main - Punto de entrada de la aplicaci√≥n
 * Sistema de Reservas de Hotel - Implementaci√≥n acad√©mica
 * 
 * Esta aplicaci√≥n implementa los siguientes patrones de dise√±o:
 * - Singleton: SistemaReservas (instancia √∫nica del sistema)
 * - Factory: HabitacionFactory y ServicioFactory (creaci√≥n de objetos)
 * - Decorator: ServicioDecorador (servicios adicionales)
 * - Observer: Cliente recibe notificaciones de cambios en reservas
 * 
 * Principios de POO aplicados:
 * - Encapsulamiento: Atributos privados con getters/setters
 * - Herencia: Jerarqu√≠a de servicios y excepciones
 * - Polimorfismo: M√©todos abstractos y interfaces
 * - Abstracci√≥n: Interfaces Observer/Subject y clase abstracta Servicio
 * 
 * Manejo de excepciones personalizado:
 * - HotelException (base)
 * - ClienteDuplicadoException
 * - HabitacionNoDisponibleException
 * 
 * @author Sistema de Reservas Hotel
 * @version 1.0
 */
public class Main {
    public static void main(String[] args) {
        // Mensaje de bienvenida con informaci√≥n del proyecto
        System.out.println("=".repeat(80));
        System.out.println("üè® SISTEMA DE RESERVAS DE HOTEL - PROYECTO ACAD√âMICO üè®");
        System.out.println("=".repeat(80));
        System.out.println("üìö Implementa conceptos avanzados de POO y patrones de dise√±o:");
        System.out.println("   ‚Ä¢ Patr√≥n Singleton: SistemaReservas");
        System.out.println("   ‚Ä¢ Patr√≥n Factory: HabitacionFactory y ServicioFactory");
        System.out.println("   ‚Ä¢ Patr√≥n Decorator: ServicioDecorador");
        System.out.println("   ‚Ä¢ Patr√≥n Observer: Notificaciones a clientes");
        System.out.println("   ‚Ä¢ Manejo de excepciones personalizado");
        System.out.println("   ‚Ä¢ Principios de encapsulamiento, herencia y polimorfismo");
        System.out.println("=".repeat(80));
        
        try {
            // Crear e inicializar la interfaz de consola
            InterfazConsola interfaz = new InterfazConsola();
            
            // Ejecutar la aplicaci√≥n
            interfaz.ejecutar();
            
        } catch (Exception e) {
            System.err.println("‚ùå Error cr√≠tico en la aplicaci√≥n: " + e.getMessage());
            e.printStackTrace();
        }
    }
} 